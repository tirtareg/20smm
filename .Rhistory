# text =  ~ death,
# textposition = 'auto',
name = "Meninggal",
marker = list(color = death_color)
) %>%
plotly::layout(
barmode = "stack",
yaxis = list(title = "Total Kasus"),
xaxis = list(title = ""),
hovermode = "compare",
margin = list(
# l = 60,
# r = 40,
b = 10,
t = 10,
pad = 2
)
)
plotly::plot_ly(data = db) %>%
plotly::add_trace(
x = ~date,
y = ~daily_con,
type = "scatter",
mode = "lines+markers",
name = "Terkonfirmasi",
line = list(color = confirmed_color),
marker = list(color = confirmed_color)
) %>%
plotly::add_trace(
x = ~date,
y = ~daily_dea,
type = "scatter",
mode = "lines+markers",
name = "Meninggal",
line = list(color = death_color),
marker = list(color = death_color)
) %>%
plotly::add_trace(
x = ~date,
y = ~daily_rec,
type = "scatter",
mode = "lines+markers",
name = "Sembuh",
line = list(color = recovered_color),
marker = list(color = recovered_color)
) %>%
plotly::layout(
title = "",
yaxis = list(title = "Banyaknya kasus"),
xaxis = list(title = "Tanggal"),
legend = list(x = 0.1, y = 0.9),
hovermode = "compare"
)
dw <- data %>%
group_by(date) %>%
summarize(confirmed = sum(confirmed, na.rm = T),
death =  sum(death, na.rm = T),
recovered = sum(recovered, na.rm = T))
dw$daily_con <- 0
for (i in 1 : nrow(dw)) {
if (i == 1) {
dw$daily_con[i] <- 0
} else {
dw$daily_con[i] <- dw$confirmed[i] - dw$confirmed[i-1]
}
}
dw$daily_dea <- 0
for (i in 1 : nrow(dw)) {
if (i == 1) {
dw$daily_dea[i] <- 0
} else {
dw$daily_dea[i] <- dw$death[i] - dw$death[i - 1]
}
}
dw$daily_con <- 0
for (i in 1 : nrow(dw)) {
if (i == 1) {
dw$daily_con[i] <- 0
} else {
dw$daily_con[i] <- dw$confirmed[i] - dw$confirmed[i-1]
}
}
dw <- data %>%
group_by(date) %>%
summarize(confirmed = sum(confirmed, na.rm = T),
death =  sum(death, na.rm = T),
recovered = sum(recovered, na.rm = T))
dw$daily_con <- 0
for (i in 1 : nrow(dw)) {
if (i == 1) {
dw$daily_con[i] <- 0
} else {
dw$daily_con[i] <- dw$confirmed[i] - dw$confirmed[i-1]
}
}
dw$daily_dea <- 0
for (i in 1 : nrow(dw)) {
if (i == 1) {
dw$daily_dea[i] <- 0
} else {
dw$daily_dea[i] <- dw$death[i] - dw$death[i - 1]
}
}
dw$daily_rec <- 0
for (i in 1 : nrow(dw)) {
if (i == 1) {
dw$daily_rec[i] <- 0
} else {
dw$daily_rec[i] <- dw$recovered[i] - dw$recovered[i - 1]
}
}
dw <- filter(dw, date > "2020-02-15")
plotly::plot_ly(data = dw) %>%
plotly::add_trace(
x = ~date,
y = ~daily_con,
type = "scatter",
mode = "lines+markers",
name = "Terkonfirmasi",
line = list(color = confirmed_color),
marker = list(color = confirmed_color)
) %>%
plotly::add_trace(
x = ~date,
y = ~daily_dea,
type = "scatter",
mode = "lines+markers",
name = "Meninggal",
line = list(color = death_color),
marker = list(color = death_color)
) %>%
plotly::add_trace(
x = ~date,
y = ~daily_rec,
type = "scatter",
mode = "lines+markers",
name = "Sembuh",
line = list(color = recovered_color),
marker = list(color = recovered_color)
) %>%
plotly::layout(
title = "",
yaxis = list(title = "Banyaknya kasus"),
xaxis = list(title = "Tanggal"),
legend = list(x = 0.1, y = 0.9),
hovermode = "compare"
)
dw <- data %>%
group_by(date) %>%
summarize(confirmed = sum(confirmed, na.rm = T),
death =  sum(death, na.rm = T),
recovered = sum(recovered, na.rm = T))
dw
dw$daily_con <- 0
for (i in 1 : nrow(dw)) {
if (i == 1) {
dw$daily_con[i] <- 0
} else {
dw$daily_con[i] <- dw$confirmed[i] - dw$confirmed[i-1]
}
}
dw
dw$daily_dea <- 0
for (i in 1 : nrow(dw)) {
if (i == 1) {
dw$daily_dea[i] <- 0
} else {
dw$daily_dea[i] <- dw$death[i] - dw$death[i - 1]
}
}
dw
dw$daily_rec <- 0
for (i in 1 : nrow(dw)) {
if (i == 1) {
dw$daily_rec[i] <- 0
} else {
dw$daily_rec[i] <- dw$recovered[i] - dw$recovered[i - 1]
}
}
dw
dw
dw <- filter(dw, date > "2020-02-15")
dw
plotly::plot_ly(data = dw) %>%
plotly::add_trace(
x = ~date,
y = ~daily_con,
type = "scatter",
mode = "lines+markers",
name = "Terkonfirmasi",
line = list(color = confirmed_color),
marker = list(color = confirmed_color)
) %>%
plotly::add_trace(
x = ~date,
y = ~daily_dea,
type = "scatter",
mode = "lines+markers",
name = "Meninggal",
line = list(color = death_color),
marker = list(color = death_color)
) %>%
plotly::add_trace(
x = ~date,
y = ~daily_rec,
type = "scatter",
mode = "lines+markers",
name = "Sembuh",
line = list(color = recovered_color),
marker = list(color = recovered_color)
) %>%
plotly::layout(
title = "",
yaxis = list(title = "Banyaknya kasus"),
xaxis = list(title = "Tanggal"),
legend = list(x = 0.1, y = 0.9),
hovermode = "compare"
)
plotly::plot_ly(data = dw) %>%
plotly::add_trace(
x = ~date,
y = ~daily_con,
type = "scatter",
mode = "lines+markers",
name = "Terkonfirmasi",
line = list(color = confirmed_color),
marker = list(color = confirmed_color)
)
dw
tail(dw)
plotly::plot_ly(data = dw[-nrow(dw),]) %>%
plotly::add_trace(
x = ~date,
y = ~daily_con,
type = "scatter",
mode = "lines+markers",
name = "Terkonfirmasi",
line = list(color = confirmed_color),
marker = list(color = confirmed_color)
)
plotly::plot_ly(data = dw[-nrow(dw),]) %>%
plotly::add_trace(
x = ~date,
y = ~daily_con,
type = "scatter",
mode = "lines+markers",
name = "Terkonfirmasi",
line = list(color = confirmed_color),
marker = list(color = confirmed_color)
) %>%
plotly::add_trace(
x = ~date,
y = ~daily_dea,
type = "scatter",
mode = "lines+markers",
name = "Meninggal",
line = list(color = death_color),
marker = list(color = death_color)
) %>%
plotly::add_trace(
x = ~date,
y = ~daily_rec,
type = "scatter",
mode = "lines+markers",
name = "Sembuh",
line = list(color = recovered_color),
marker = list(color = recovered_color)
) %>%
plotly::layout(
title = "",
yaxis = list(title = "Banyaknya kasus"),
xaxis = list(title = "Tanggal"),
legend = list(x = 0.1, y = 0.9),
hovermode = "compare"
)
dr <- data %>%
select(Country.Region, date, confirmed, death, recovered)
#dr$Country.Region <- fct_explicit_na(dr$Country.Region)
dr <- dr %>%
group_by(Country.Region) %>%
filter(date == max(date))
dr <- dr %>%
group_by(Country.Region) %>%
summarize(confirmed = sum(confirmed, na.rm = T),
death = sum(death, na.rm = T),
recovered = sum(recovered, na.rm = T))
dr <- dr %>%
mutate(death_rate = round(death / confirmed *100, 2)) %>%
filter(confirmed > 0) %>%
arrange(desc(death))
dr1 <- dr
names(dr1) <- c("Negara", "Terkonfirmasi", "Meninggal", "Sembuh", "Tingkat Kematian (%)")
DT::datatable(dr1, options = list(lengthMenu = c(10, 20, 50, 100), pageLength = 10))
dr <- data %>%
select(Country.Region, date, confirmed, death, recovered)
dr
#dr$Country.Region <- fct_explicit_na(dr$Country.Region)
dr <- dr %>%
group_by(Country.Region) %>%
filter(date == max(date))
dr
#dr$Country.Region <- fct_explicit_na(dr$Country.Region)
dr <- dr %>%
group_by(Country.Region) %>%
filter(date == (max(date)-1))
dr <- dr %>%
group_by(Country.Region) %>%
summarize(confirmed = sum(confirmed, na.rm = T),
death = sum(death, na.rm = T),
recovered = sum(recovered, na.rm = T))
dr <- dr %>%
mutate(death_rate = round(death / confirmed *100, 2)) %>%
filter(confirmed > 0) %>%
arrange(desc(death))
dr1 <- dr
names(dr1) <- c("Negara", "Terkonfirmasi", "Meninggal", "Sembuh", "Tingkat Kematian (%)")
DT::datatable(dr1, options = list(lengthMenu = c(10, 20, 50, 100), pageLength = 10))
dr <- data %>%
select(Country.Region, date, confirmed, death, recovered)
#dr$Country.Region <- fct_explicit_na(dr$Country.Region)
dr <- dr %>%
group_by(Country.Region) %>%
filter(date == (max(date)-1))
dr
dr <- dr %>%
group_by(Country.Region) %>%
summarize(confirmed = sum(confirmed, na.rm = T),
death = sum(death, na.rm = T),
recovered = sum(recovered, na.rm = T))
dr
dr <- dr %>%
mutate(death_rate = round(death / confirmed *100, 2)) %>%
filter(confirmed > 0) %>%
arrange(desc(death))
dr
dr1 <- dr
names(dr1) <- c("Negara", "Terkonfirmasi", "Meninggal", "Sembuh", "Tingkat Kematian (%)")
dr1
DT::datatable(dr1, options = list(lengthMenu = c(10, 20, 50, 100), pageLength = 10))
dr1 <- dr[1:15,]
dr1 <- dr1 %>%
arrange(desc(death_rate))
dr1$Country.Region <- factor(dr1$Country.Region, levels = dr1$Country.Region)
plotly::plot_ly(
data = dr1,
x = ~Country.Region,
y = ~death_rate,
# text =  ~ confirmed,
# textposition = 'auto',
type = "bar",
name = "Dirawat",
marker = list(color = death_color)
) %>%
plotly::layout(
title = "",
yaxis = list(title = "Tingkat Kematian (%)"),
xaxis = list(title = "Negara"),
hovermode = "compare"
)
plotly::plot_ly(data = db) %>%
plotly::add_trace(
x = ~date,
y = ~confirmed,
type = "scatter",
mode = "lines+markers",
name = "Terkonfirmasi",
line = list(color = confirmed_color),
marker = list(color = confirmed_color)
) %>%
plotly::add_trace(
x = ~date,
y = ~death,
type = "scatter",
mode = "lines+markers",
name = "Meninggal",
line = list(color = death_color),
marker = list(color = death_color)
) %>%
plotly::add_trace(
x = ~date,
y = ~recovered,
type = "scatter",
mode = "lines+markers",
name = "Sembuh",
line = list(color = recovered_color),
marker = list(color = recovered_color)
) %>%
plotly::add_annotations(
x = as.Date("2020-03-02"),
y = 1,
text = paste("Kasus Pertama"),
xref = "x",
yref = "y",
arrowhead = 5,
arrowhead = 3,
arrowsize = 1,
showarrow = TRUE,
ax = -90,
ay = -90
) %>%
plotly::add_annotations(
x = as.Date("2020-03-11"),
y = 3,
text = paste("Kematian Pertama"),
xref = "x",
yref = "y",
arrowhead = 5,
arrowhead = 3,
arrowsize = 1,
showarrow = TRUE,
ax = -10,
ay = -90
) %>%
plotly::layout(
title = "",
yaxis = list(title = "Banyaknya kasus (kumulatif)"),
xaxis = list(title = "Tanggal"),
legend = list(x = 0.1, y = 0.9),
hovermode = "compare"
)
db2 <- data %>%
filter(Country.Region == "Malaysia" | Country.Region == "Indonesia" |
Country.Region == "Singapore" | Country.Region == "Japan") %>%
filter(date == max(date))
db2 <- db2 %>%
mutate(unrecovered = confirmed - death -recovered,
country = factor(Country.Region, levels = Country.Region))
plotly::plot_ly(
data = db2,
x = ~country,
y = ~unrecovered,
# text =  ~ confirmed,
# textposition = 'auto',
type = "bar",
name = "Dirawat",
marker = list(color = active_color)
) %>%
plotly::add_trace(
y = ~recovered,
# text =  ~ death,
# textposition = 'auto',
name = "Sembuh",
marker = list(color = recovered_color)
) %>%
plotly::add_trace(
y = ~death,
# text =  ~ death,
# textposition = 'auto',
name = "Meninggal",
marker = list(color = death_color)
) %>%
plotly::layout(
barmode = "stack",
yaxis = list(title = "Total Kasus"),
xaxis = list(title = ""),
hovermode = "compare",
margin = list(
# l = 60,
# r = 40,
b = 10,
t = 10,
pad = 2
)
)
str(db2)
db2
db2 <- data %>%
filter(Country.Region == "Malaysia" | Country.Region == "Indonesia" |
Country.Region == "Singapore" | Country.Region == "Japan") %>%
filter(date == (max(date)-1))
db2 <- db2 %>%
mutate(unrecovered = confirmed - death -recovered,
country = factor(Country.Region, levels = Country.Region))
plotly::plot_ly(
data = db2,
x = ~country,
y = ~unrecovered,
# text =  ~ confirmed,
# textposition = 'auto',
type = "bar",
name = "Dirawat",
marker = list(color = active_color)
) %>%
plotly::add_trace(
y = ~recovered,
# text =  ~ death,
# textposition = 'auto',
name = "Sembuh",
marker = list(color = recovered_color)
) %>%
plotly::add_trace(
y = ~death,
# text =  ~ death,
# textposition = 'auto',
name = "Meninggal",
marker = list(color = death_color)
) %>%
plotly::layout(
barmode = "stack",
yaxis = list(title = "Total Kasus"),
xaxis = list(title = ""),
hovermode = "compare",
margin = list(
# l = 60,
# r = 40,
b = 10,
t = 10,
pad = 2
)
)
setwd("~/Github Publish/Corona1")
setwd("G:/My Drive/#PMB/2020/03_SMMPTN/Dashboard/20smm")
